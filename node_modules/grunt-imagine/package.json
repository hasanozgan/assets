{
  "name": "grunt-imagine",
  "description": "Grunt tasks for optimizing, inlining & spriting images",
  "version": "0.2.2",
  "homepage": "http://asciidisco.github.com/grunt-imagine/",
  "author": {
    "name": "asciidisco",
    "email": "public@asciidisco.com",
    "url": "http://www.asciidisco.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/asciidisco/grunt-imagine.git"
  },
  "bugs": {
    "url": "https://github.com/asciidisco/grunt-imagine/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://asciidisco.github.com/grunt-imagine//blob/master/LICENSE-MIT"
    }
  ],
  "main": "grunt.js",
  "bin": {
    "grunt-imagine": "bin/grunt-imagine"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "scripts": {
    "test": "grunt lint test --verbose"
  },
  "dependencies": {
    "async": "~0.1.22",
    "grunt": "~0.3.9",
    "jQuery": ">=1.7.4",
    "which": "~1.0.5",
    "mkdirp": ">=0.3.3",
    "xmlhttprequest": ">=1.4.2",
    "jsdom": ">=0.2.14",
    "mime": ">=1.2.7"
  },
  "devDependencies": {
    "grunt": "~0.3.9"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-imagine\n\nUse [@cowboys](https://github.com/cowboy) js based optimizer [grunt](https://github.com/cowboy/grunt) to optimize (and or inline) your projects image resources.\n\n[![Build Status](https://secure.travis-ci.org/asciidisco/grunt-imagine.png?branch=master)](http://travis-ci.org/asciidisco/grunt-imagine)\n\n## Getting Started\n\n### Plugin installation\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-imagine`\n\nThen add this line to your project's `grunt.js` gruntfile.\n\n```javascript\ngrunt.loadNpmTasks('grunt-imagine');\n```\n\n### Installation of third party tools\nIf you want to use the pngmin, jpgmin, gifmin or pngnq tasks,\nyou need to have some third party tools installed & in your global PATH:\n\nIt is enough if you have one tool per task installed,\nbut if you provide more of them, grunt-imagine will recognize that\nand will try to use them, if they´ll help to shrink the filesize.\n\nNote: I will add more tools to the chain in the future,\nif you would like to see a tool in image, ping me.\n\n### PNG tools:\n+ [pngcrush](http://pmt.sourceforge.net/pngcrush/)\n+ [pngout Windows](http://advsys.net/ken/utils.htm)\n+ [pngout *nix](http://www.jonof.id.au/kenutils)\n+ [optipng](http://optipng.sourceforge.net/)\n+ [cryopng](http://encode.ru/threads/1260-CryoPNG-short-introduction)\n+ [advpng](http://advancemame.sourceforge.net/comp-download.html)\n+ [huffmix](http://frdx.free.fr/huffmix/)\n\n### GIF tools:\n+ [gifsicle](http://www.lcdf.org/gifsicle/)\n\n### JPEG tools:\n+ [jpegoptim](https://github.com/glennr/jpegoptim)\n+ [jpegtran](http://jpegclub.org/jpegtran/)\n+ [jpegrescan](https://github.com/kud/jpegrescan)\n\n### PNGQUANT tools:\n+ [pngnq](http://pngnq.sourceforge.net/)\n\n### Resources\n+ [grunt](https://github.com/cowboy/grunt)\n+ [Getting started](https://github.com/cowboy/grunt/blob/master/docs/getting_started.md)\n\n## Documentation\n\n### pngmin task\nIf you would like to shrink the size (lossless) of your *.png files,\nset up a src description, where to find your original *.png files\nand a directory where you would like to store your optimized files.\n\nThe task will take the original directory setup from your src directories,\nand will copy them over (even for subdirs).\n\nWarning!\nIf the dest property is set equally to your src directory, imagine will override your files!\n\n```javascript\npngmin: {\n  src: [\n    'src/*.png',\n    'src/img/*.png'\n  ],\n  dest: 'build'\n}\n```\n\n### gifmin task\nIf you would like to shrink the size (lossless) of your *.gif files,\nset up a src description, where to find your original *.gif files\nand a directory where you would like to store your optimized files.\n\nThe task will take the original directory setup from your src directories,\nand will copy them over (even for subdirs).\n\nWarning!\nIf the dest property is set equally to your src directory, imagine will override your files!\n\n```javascript\ngifmin: {\n  src: ['src/**/*.gif'],\n  dest: 'build'\n}\n```\n\n### jpgmin task\nIf you would like to shrink the size (lossless) of your *.jpg files,\nset up a src description, where to find your original *.jpg files\nand a directory where you would like to store your optimized files.\n\nThe task will take the original directory setup from your src directories,\nand will copy them over (even for subdirs).\n\nWarning!\nIf the dest property is set equally to your src directory, imagine will override your files!\n\n```javascript\njpgmin: {\n  src: ['src/**/*.jpg'],\n  dest: 'build'\n}\n```\n\n### pngnq task\nIf you would like to quantizize your PNG images in RGBA format,\nset up a src description, where to find your original *.png files\nand a directory where you would like to store your optimized files.\n\nThe task will take the original directory setup from your src directories,\nand will copy them over (even for subdirs).\n\nWarning!\nIf the dest property is set equally to your src directory, imagine will override your files!\n\n```javascript\npngnq: {\n  src: ['src/**/icons*.png'],\n  dest: 'build'\n}\n```\n\n### inlineImg task\nIf you would like to inline your images (data:uri/base64) in your *.css or *.png files,\nyou can use the inlineImg task, just add a src, where imagine can\nfind your *.css and/or *.html files.\n\nIf you use absolute paths, use the base property to tell imagine, where\nit can find your images.\n\nIf you set the ie8 flag to true, only images smaller than 32kb will be inlined.\n\n```javascript\ninlineImg: {\n  src: ['src/**/*.css', 'src/**/*.html'],\n  ie8: true,\n  base: 'build/img',\n  dest: 'build'\n}\n```\n\n### sprites (multi)task\nImagine provides the ability to generate sprite maps and the\ncorresponding css files. At the moment, only *.png files can be processed.\n\n\n```javascript\n  sprites: {\n      icons36: {\n          src: ['src/img/icons36/*.png'],\n          css: 'src/css/icons36.css',\n          map: 'src/img/icons36.png'\n      }\n  }\n```\n\nThis configuration will generate an image named icons36.png in the\n'src/img' folder, which contains all of the *.png images found in the\n'src/img/icons36/' folder.\n\nGiven that two matching images were found in the'src/img/icons36/' folder,\nnamed 'MyImage1.png' and 'MyImage2.png',\nthe generated css file would look like this:\n\n```css\n.MyImage1, .MyImage2 {\n    background: url(\"../img/icon36.png\") no-repeat;\n}\n\n.MyImage1 {\n    background-position: 0 -432px;\n}\n\n.MyImage2 {\n    background-position: 0 -396px;\n}\n\n```\n\nAdditionally you can add a css class prefix:\n\n```javascript\n  sprites: {\n      icons36: {\n          src: ['src/img/icons36/*.png'],\n          css: 'src/css/icons36.css',\n          map: 'src/img/icons36.png',\n          classPrefix: 'Icon'\n      }\n  }\n```\n\nwhich would generate smth. like this:\n\n```css\n.Icon-MyImage1, .Icon-MyImage2 {\n    background: url(\"../img/icon36.png\") no-repeat;\n}\n\n.Icon-MyImage1 {\n    background-position: 0 -432px;\n}\n\n.Icon-MyImage2 {\n    background-position: 0 -396px;\n}\n\n```\n\nThe images will be sprited vertically, so you might need to set\nup some margin to give´em some space:\n\n```javascript\n  sprites: {\n      icons36: {\n          src: ['src/img/icons36/*.png'],\n          css: 'src/css/icons36.css',\n          map: 'src/img/icons36.png',\n          classPrefix: 'Icon',\n          margin: 15\n      }\n  }\n```\n\nNow you´re images will be places with 15 px of space between them.\n\nThis task doesn´t depend on any external libraries, except for\nPhantomJS, which the most of you should have installed if you´re using grunt.\n\n## Future (TODO)\n* Better documentation (Near future!)\n* JS only PNG optimizing\n* More JPG, PNG, GIF tools (ping me, if you knew good ones)\n* Using remote services alternativly (smush.it, tinypng.org)\n* GIF to PNG conversion (if smaller)\n\n## Release History\n\n### 0.2.2\n+ Fixes Issue #5 (Thx to @dominicbarnes)\n\n### 0.2.1\n+ Fixing the travis build\n+ Additions from commit #12 (@dethtron5000)\n  - the mime type wasn't always properly injected into the data URI\n  - the processed file counts weren't updated properly during the same task\n\n### 0.2.0\n+ Added basic spriting feature (for pngs)\n\n### 0.1.3\n+ Added jpegrescan\n+ Fixed bug related to issue #6 (output file is bigger than input)\n\n### 0.1.2\n+ Added jpegoptim\n+ Fixed gifsicle cmd argument failure\n\n### 0.1.1\n+ Fixed pngnq cmd argument failure\n\n### 0.1.0\n+ Initial Release (jpgmin, gifmin, pngmin, inlineImg, pngnq)\n\n## License\nCopyright (c) 2012 asciidisco\nLicensed under the MIT license.",
  "readmeFilename": "README.md",
  "_id": "grunt-imagine@0.2.2",
  "_from": "grunt-imagine@~0.2.2"
}
